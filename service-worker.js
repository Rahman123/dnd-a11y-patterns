"use strict";var precacheConfig=[["/dnd-a11y-patterns/index.html","6f2059297588ade63977fd7b0fe0de72"],["/dnd-a11y-patterns/static/css/main.ec1035d9.css","48f48b22268d3de095986cd465657c8b"],["/dnd-a11y-patterns/static/js/main.17ecfc92.js","832c71b3d3c89c1239e91fccd22f97b1"],["/dnd-a11y-patterns/static/media/SalesforceSans-Bold.1a99b4b5.woff","1a99b4b58efca0b3c1b1ea9c29d981e4"],["/dnd-a11y-patterns/static/media/SalesforceSans-Bold.68a71533.woff2","68a71533d08ff9251d6f179043a4781b"],["/dnd-a11y-patterns/static/media/SalesforceSans-BoldItalic.41ae6b36.woff","41ae6b36a1f81e8c5d2aafe12c409f30"],["/dnd-a11y-patterns/static/media/SalesforceSans-BoldItalic.dba3843e.woff2","dba3843e5b62ac3c2d9637a98f2207f4"],["/dnd-a11y-patterns/static/media/SalesforceSans-Italic.882515c4.woff","882515c44aafee22611dbcbc904a792b"],["/dnd-a11y-patterns/static/media/SalesforceSans-Italic.afa7774c.woff2","afa7774ce458bd2fc11c0f838f95a920"],["/dnd-a11y-patterns/static/media/SalesforceSans-Light.2edec878.woff","2edec8788fdf09212e4fecdfeed96a7e"],["/dnd-a11y-patterns/static/media/SalesforceSans-Light.c9505072.woff2","c9505072b839823249fbfbf0c3e31ef8"],["/dnd-a11y-patterns/static/media/SalesforceSans-LightItalic.676a9c30.woff2","676a9c306dd2390c45ec0d0b28e51a6a"],["/dnd-a11y-patterns/static/media/SalesforceSans-LightItalic.8080e8bc.woff","8080e8bc6c523ed5c657931fdd80e032"],["/dnd-a11y-patterns/static/media/SalesforceSans-Regular.401b32dd.woff","401b32ddc80c4c66d0558df1bc202d9b"],["/dnd-a11y-patterns/static/media/SalesforceSans-Regular.aa41afda.woff2","aa41afdaceb8b78c56529555448bcf44"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var r="/dnd-a11y-patterns/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});